% GCampImaging.m
% 
% created by Srinivas Gorur-Shandilya at 5:55 , 03 December 2015. Contact me at http://srinivas.gs/contact/
% 
% This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. 
% To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/.


pHeader;

%% Example Visuals
% In the following figure, we show some example pictures of the antenna in the fluorescence channel. The image is generated by projecting the standard deviation across time for each pixel, and clearly shows the sensilla, and some that respond to the odour. 
%
% <</Users/sigbhu/code/da/images/calcium-imaging.png>>
%

%% Odour-induced intracellular Calcium in ORNs
% In this document, we attempt to measure intracellular calcium levels using GCamp6, which is expressed in ab3A ORNs using the UAS-GAL4system. (We record from w;22a-GAL4/+;UAS-GCamp6/+) flies. GCamp6f has a peak time (0-peak) of ~50ms, and a decay time (1/2 time) of ~200ms. 

%% Intracellular Calcium increases with larger odor stimulus
% First, we looked at how intracellular Calcium (as reported by GCamp6) varied with odor concentration. (a) shows the Calcium signals, grouped by odor dose. Colors indicate odor concentrations (purple = smaller, yellow =  larger). Gray trace is with no odor (control). (b) Fluorescence fold change vs. peak stimulus. Red crosses come from test ROIs (sensilla) and black crosses come from control ROIs (not on the antennal third segment). (c) Pre-stimulus florescence level is not correlated with the peak stimulus (as expected). (d) Rising timescale of Calcium signals (estimated by fitting exponentials) vs. peak stimulus. The rising timescale seems roughly invariant with peak stimulus. (e) Off timescale (estimated by the time taken to reach 10% of the maximum fold change) of Calcium signals vs. peak stimulus. Off timescales get longer with increasing dose, suggesting that Calcium levels drop off more slowly with bigger pulses. 

% p = '/local-data/DA-paper/GCamp6/ephys/steps/';
p = getPath(dataManager,'01117c9d2c1acc04841739871f0bdb89');
[PID, LFP, fA, paradigm, orn, fly, AllControlParadigms, paradigm_hashes, sequence,calcium_test,calcium_control] = consolidateDataCalcium(p,1);

% mark some data as shit
calcium_test(:,nansum(calcium_test) == 0) = NaN;
calcium_control(:,nansum(calcium_control) == 0) = NaN;

% normalise calcium signals by pre-stimulus mean
calcium_test_fold = calcium_test;
calcium_control_fold = calcium_control;
for i = 1:width(PID)
	calcium_control_fold(:,i) = calcium_control_fold(:,i)/mean(calcium_control_fold(1e3:5e3,i));
	calcium_test_fold(:,i) = calcium_test_fold(:,i)/mean(calcium_test_fold(1e3:5e3,i));
end

% clean up point defects
for j = 1:5
	for i = 1:width(PID)
		calcium_control_fold(:,i) = removePointDefects(calcium_control_fold(:,i));
		calcium_test_fold(:,i) = removePointDefects(calcium_test_fold(:,i));
	end
end

% remove baseline from the PID
PID = bsxfun(@minus,PID,min(PID));

% fit exponentials to rise phases
tau_on = NaN*paradigm;
for i = 1:width(PID)
	try
		temp = calcium_test_fold(:,i);
		[~,loc] = max(temp);
		temp = temp(5e3+130:loc);
		temp = temp - temp(1);
		temp = temp/max(temp);
		ft=fittype('1- exp(-x./tau)');
		fo = fitoptions(ft);
		fo.Robust = 'on';
		fo.StartPoint = 1e3;
		t = 1:length(temp);
		ff = fit(t(:),temp(:),ft,fo);
		tau_on(i) = ff.tau;
	catch
	end
end

% compute off-timescales as time to 10% of max
tau_off = NaN*paradigm;
for i = 1:size(PID,2)
	R = calcium_test_fold(:,i);
	try
		tau_off(i) = find(R(10e3:end) < 1 + .1*mean(R(9e3:10e3)),1,'first');
	catch
	end
end

figure('outerposition',[0 0 1300 999],'PaperUnits','points','PaperSize',[1300 999]); hold on

% first show the traces
subplot(2,3,1:2), hold on
time = 1e-3*(1:length(PID));
c = parula(max(paradigm));
for i = 1:max(paradigm)
	R = calcium_test_fold(:,paradigm == i);
	if i < 15
		plot(time,mean(R,2),'Color',c(i,:))
	else
		plot(time,mean(R,2),'Color',[.5 .5 .5])
	end
end
set(gca,'XLim',[.1 29],'YLim',[.8 3])
xlabel('Time (s)')
ylabel(['GCamp6 flourescence' char(10) '(fold change)'])

% now show the dose-response for the fold change, and also for the control region
subplot(2,3,3); hold on
clear l
l(1) = plot(max(PID),mean(calcium_test_fold(9e3:10e3,:)),'r+');
l(2) = plot(max(PID),mean(calcium_control_fold(9e3:10e3,:)),'k+');
xlabel('Peak Stimulus (V)')
ylabel(['GCamp6 flourescence' char(10) '(fold change)'])

% show the pre-stimulus raw calcium levels
subplot(2,3,4), hold on
l = plot(max(PID),mean(calcium_test(1e3:5e3,:)),'r+');
[rho,p] = spear(max(PID),mean(calcium_test(1e3:5e3,:)));
legend(['p = ' oval(p)])
xlabel('Peak Stimulus (V)')
ylabel('Pre-stimulus flourescence (a.u.)')
set(gca,'YLim',[1e5 1e6])

% show on-timescales 
subplot(2,3,5), hold on
plot(max(PID),tau_on,'k+')
xlabel('Peak Stimulus (V)')
ylabel('\tau_{on} (ms)')

% show off-timescales
subplot(2,3,6); hold on
plot(max(PID),tau_off,'k+')
xlabel('Peak Stimulus (V)')
ylabel('\tau_{off} (ms)')


prettyFig('fs',20);

labelFigure('x_offset',0,'font_size',26)

if being_published
	snapnow
	delete(gcf)
end


%% Calcium responses to Gaussian odor signals
% Now, I analyse another dataset where we presented Gaussian odor stimuli with increasing means to the fly and measured the intracellular Calcium signals using GCamp6. The following figure shows what the stimuli and the responses look like. Because I wanted to do this as similar to the Weber-Fechner data as possible, I collected the data the same way: by going from one trial to the next, with ~5 second delay between trials, for a total of ~15 delay between one Gaussian and the next. (a) Shows what the stimuli look like. (b) Shows the corresponding Calcium responses. Note that we no longer see a nice monotonic increase in the Calcium responses with increasing stimulus (as we saw before). Why? One possibility is that since the Calcium takes a long time to clear away, this fold change measure hides the magnitude of the true response. In other words, the fold change measure assumes that the system is at resting state at t = 0s, which may not be true in the data. 


% load all the data
% p = '/local-data/DA-paper/GCamp6/ephys';
p = getPath(dataManager,'011bfda2927c0b08ddae3c1fa19a5e4b');
[PID, ~, ~, paradigm, orn, fly, AllControlParadigms, paradigm_hashes, sequence,calcium_test,calcium_control] = consolidateDataCalcium(p,1);

pulses = isnan(PID(50e3,:));
% remove some redundant paradimgs 
rm_this = paradigm == 5 | (paradigm > 15 & paradigm < 21) | pulses;

% remove the pulses from the data
PID(:,rm_this) = [];
calcium_test(:,rm_this) = [];
orn(rm_this) = [];
fly(rm_this) = [];
paradigm(rm_this) = [];
calcium_control(:,rm_this) = [];


% remove the baseline from the PID
PID = bsxfun(@minus,PID,min(PID));

% calculate fold change
calcium_test_fold = calcium_test;
calcium_control_fold = calcium_control;
for i = 1:length(paradigm)
	calcium_test_fold(:,i) = calcium_test(:,i)/nanmean(calcium_test(1e3:5e3,i));
	calcium_control_fold(:,i) = calcium_control(:,i)/nanmean(calcium_control(1e3:5e3,i));
end

up = unique(paradigm);
c = parula(length(up));
time = 1e-3*(1:length(PID));

figure('outerposition',[0 0 1000 701],'PaperUnits','points','PaperSize',[1000 701]); hold on
subplot(2,1,1); hold on
for i = 1:length(up)
	S = nanmean(PID(:,paradigm == up(i)),2);
	if up(i) < 21
		plot(time,S,'Color',c(i,:))
	else
		plot(time,S,'Color',[.5 .5 .5])
	end
end
ylabel('Stimulus (V)')
set(gca,'YLim',[-.1 2.5],'XLim',[0 60])

subplot(2,1,2); hold on
for i = 1:length(up)
	S = nanmean(calcium_test_fold(:,paradigm == up(i)),2);
	if up(i) < 21
		plot(time,S,'Color',c(i,:))
	else
		plot(time,S,'Color',[.5 .5 .5])
	end
end
set(gca,'YLim',[.9 2.5],'XLim',[0 60])
ylabel('flourescence (fold change)')
xlabel('Time (s)')

prettyFig();
labelFigure('x_offset',0,'font_size',26)

if being_published
	snapnow
	delete(gcf)
end

%%
% We saw in the earlier dataset that Calcium on timescale didn't vary with the amplitude of the stimulus, but off timescales did. I repeat the same analysis with this data set (I can only compute on timescales here). In the following figure, I plot these on timescales as a function of the mean stimulus. Note that the on-timescales vary a lot, with some parameters which is not the mean stimulus. This is consistent with the idea that back-to-back stimulus presentations cause a slow build up of Calcium here, which in turn affects its response kinetics. 

% compute off-timescales as time to 10% of max
tau_on = NaN*paradigm;
for i = 1:size(PID,2)
	R = calcium_test_fold(:,i);
	try
		tau_on(i) = find(R(5e3:end) > .9*max(R(:)),1,'first');
	catch
	end
end

figure('outerposition',[0 0 500 500],'PaperUnits','points','PaperSize',[1000 500]); hold on
plot(mean(PID(35e3:55e3,:)),tau_on,'k+')
xlabel('\mu_{Stimulus} (V)')
ylabel('\tau_{on} (ms)')

prettyFig();

if being_published
	snapnow
	delete(gcf)
end



%% Does Calcium change with stimulus variance? 
% In the previous sections, we established that Calcium could vary with the mean stimulus. Combined with results from Cao et al., this suggests that Calcium plays a role in Weber-Fechner gain scaling to the mean stimulus. Here, I look at how Calcium changes when we switch variance. (a) Stimulus where variance switches every 5 seconds, but mean does not change much (also see (d)). (b) Calcium fold change, relative to fold change at low variance for test ROIs (sensilla). (e) Relative fold change (relative to the low variance epochs) are not significantly different from 1. (c) Calcium fold change, relative to fold change at low variance for control ROIs (not ssensilla). (f) Relative fold change (relative to the low variance epochs) are not significantly different from 1. 

%%
% This suggests that variance gain control and mean gain control are mechanistically different. While mean gain control involves Calcium, variance gain control does not. 

% p = '/local-data/DA-paper/GCamp6/ephys/variance-switches';
p = getPath(dataManager,'9e097cd387946fa3a95ed94e202c369b');
[PID, ~, ~, paradigm, orn, fly, AllControlParadigms, paradigm_hashes, sequence,calcium_test,calcium_control] = consolidateDataCalcium(p,1);

global_start = 30e3;
block_length = 10e3;

% find outliers and blank them
o = kmeans(PID(5e3:end-5e3,:)',2);
PID(:,(o ~= mode(o))) = NaN;

% remove baseline from PID
PID = bsxfun(@minus,PID,min(PID));

% convert all calcium signals into a fold change, and remove a linear trend from them
for i = 1:length(paradigm)
	% fold change
	calcium_test(:,i) = calcium_test(:,i)/mean(calcium_test(1e3:5e3,i));
	calcium_control(:,i) = calcium_control(:,i)/mean(calcium_control(1e3:5e3,i));
	% 
	a = global_start;
	z = length(PID)-5e3;
	ff = fit((a:z)',calcium_test(a:z,i),'poly1');
	calcium_test(a:z,i) = calcium_test(a:z,i) - ff(a:z) + mean(calcium_test(a:z,i));

	ff = fit((a:z)',calcium_control(a:z,i),'poly1');
	calcium_control(a:z,i) = calcium_control(a:z,i) - ff(a:z) + mean(calcium_control(a:z,i));
end


% reshape signals into blocks
reshaped_PID = PID(global_start:end-1e4-1,1:width(PID));
reshaped_PID = reshape(reshaped_PID,block_length,width(reshaped_PID)*length(reshaped_PID)/block_length);

reshaped_calcium_test = calcium_test(global_start:end-1e4-1,1:width(calcium_test));
reshaped_calcium_test = reshape(reshaped_calcium_test,block_length,width(reshaped_calcium_test)*length(reshaped_calcium_test)/block_length);

reshaped_calcium_control = calcium_control(global_start:end-1e4-1,1:width(calcium_control));
reshaped_calcium_control = reshape(reshaped_calcium_control,block_length,width(reshaped_calcium_control)*length(reshaped_calcium_control)/block_length);

figure('outerposition',[0 0 1200 800],'PaperUnits','points','PaperSize',[1200 800]); hold on

% show the stimulus and its statistics
subplot(2,3,1), hold on
t = 1e-3*(1:block_length);
plot(t,reshaped_PID,'Color',[.5 .5 .5])
xlabel('Time since switch (s)')
ylabel('PID (V)')

subplot(2,3,4), hold on
m1 =  nanmean(reshaped_PID(1e3:5e3,:));
m2 =  nanmean(reshaped_PID(6e3:end,:));

s1 =  nanstd(reshaped_PID(1e3:5e3,:));
s2 =  nanstd(reshaped_PID(6e3:end,:));

plot(s1,m1,'b+')
plot(s2,m2,'r+')
set(gca,'XLim',[0 .2],'YLim',[0 0.5])
ylabel('\mu_{Stimulus} (V)')
xlabel('\sigma_{Stimulus} (V)')

% show the test ROI calcium signals
subplot(2,3,2), hold on
t = 1e-3*(1:block_length);
for i = 1:size(reshaped_calcium_test,2)
	y = reshaped_calcium_test(:,i);
	y = y/(mean(y(1e3:5e3)));
	plot(t,y,'Color',[.5 .5 .5])
end
xlabel('Time since switch (s)')
ylabel(['Calcium test ROI' char(10) '(rel. fold change)'])

subplot(2,3,5), hold on
m1 =  nanmean(reshaped_calcium_test(1e3:5e3,:));
m2 =  nanmean(reshaped_calcium_test(6e3:end,:));

m2 = m2./m1;

plot(s2,m2,'r+')
set(gca,'XLim',[0 .2],'YLim',[0 2])
ylabel('Relative fold change')
xlabel('\sigma_{Stimulus} (V)')
[~,p]=ttest(m2-1);
title(['t-test p = ' oval(p)])

% now do the same for the control
subplot(2,3,3), hold on
t = 1e-3*(1:block_length);
for i = 1:size(reshaped_calcium_control,2)
	y = reshaped_calcium_control(:,i);
	y = y/(mean(y(1e3:5e3)));
	plot(t,y,'Color',[.5 .5 .5])
end
xlabel('Time since switch (s)')
ylabel(['Calcium control ROI' char(10) '(rel. fold change)'])

subplot(2,3,6), hold on
m1 =  nanmean(reshaped_calcium_control(1e3:5e3,:));
m2 =  nanmean(reshaped_calcium_control(6e3:end,:));

m2 = m2./m1;

plot(s2,m2,'r+')
set(gca,'XLim',[0 .2],'YLim',[0 2])
ylabel('Relative fold change')
xlabel('\sigma_{Stimulus} (V)')
[~,p]=ttest(m2-1);
title(['t-test p = ' oval(p)])

prettyFig;

labelFigure('x_offset',0,'font_size',25)

if being_published
	snapnow
	delete(gcf)
end

%% Version Info

pFooter;