

%% Fast gain control in naturalistic stimulus
% In this document, I attempt to use a model-free analysis method to demonstrate that there exists fast gain control in the naturalistic stimulus. 



pHeader;

%% Analysis pipeline 
% This method of analysis is so fiendishly complicated that I made a handy graphic that explains what I'm doing: 



cdata = consolidateData2(getPath(dataManager,'4608c42b12191b383c84fea52392ea97'));
[cdata, data] =  assembleScaledNatStim(cdata);


%% we now attempt to estimate a gain control timescale from the data
% first collect all whiffs
 [s,x,r,whiff_s,group] = binnedWhiffGainAnalysis(data(2).S,data(2).X,data(2).R);

figure('outerposition',[0 0 1400 901],'PaperUnits','points','PaperSize',[1400 901]); hold on
subplot(2,3,1); hold on
for i = 1:max(group)
	tempx = whiff_s(group==i)/mean(whiff_s(group==i));
	tempy = x(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(whiff_s,x))],'Location','northeast')
xlabel('Whiff amplitude (norm)')
ylabel('LFP response (norm)')

subplot(2,3,2); hold on
for i = 1:max(group)
	tempx = s(group==i);
	tempy = x(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(s,x))],'Location','northeast')
xlabel('\mu_{Stimulus} in preceding 300ms')
ylabel('LFP response (norm)')

subplot(2,3,4); hold on
for i = 1:max(group)
	tempx = whiff_s(group==i)/mean(whiff_s(group==i));
	tempy = r(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(whiff_s,r))],'Location','northeast')
xlabel('Whiff amplitude (norm)')
ylabel('Firing response (norm)')

subplot(2,3,5); hold on
for i = 1:max(group)
	tempx = s(group==i);
	tempy = r(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(s,r))],'Location','northeast')
xlabel('\mu_{Stimulus} in preceding 300ms')
ylabel('Firing response (norm)')

% now vary the stimulus history length 
all_history_lengths = unique(floor(logspace(1,4,60)));

rho_x_whiff = NaN*all_history_lengths;
rho_x_gain = NaN*all_history_lengths;
rho_r_whiff = NaN*all_history_lengths;
rho_r_gain = NaN*all_history_lengths;

rho_x_whiff_p = NaN*all_history_lengths;
rho_x_gain_p = NaN*all_history_lengths;
rho_r_whiff_p = NaN*all_history_lengths;
rho_r_gain_p = NaN*all_history_lengths;

for i = 1:length(all_history_lengths)
	[s,x,r,whiff_s,group] = binnedWhiffGainAnalysis(data(2).S,data(2).X,data(2).R,'history_length',all_history_lengths(i));

	% compute correlations 
	[rho_x_gain(i), rho_x_gain_p(i)] = corr(s,x,'type','Spearman');
	[rho_x_whiff(i), rho_x_whiff_p(i)] = corr(whiff_s,x,'type','Spearman');
	[rho_r_gain(i), rho_r_gain_p(i)] = corr(s,r,'type','Spearman');
	[rho_r_whiff(i), rho_r_whiff_p(i)] = corr(whiff_s,r,'type','Spearman');


end

% emphasise significant points
subplot(2,3,3); hold on
plot(all_history_lengths,rho_x_whiff,'k');
plot(all_history_lengths,rho_x_gain,'r');


subplot(2,3,6); hold on
plot(all_history_lengths,rho_r_whiff,'k');
plot(all_history_lengths,rho_r_gain,'r');



rho_x_gain(rho_x_gain_p>.05) = NaN;
rho_x_whiff(rho_x_whiff_p>.05) = NaN;
rho_r_gain(rho_r_gain_p>.05) = NaN;
rho_r_whiff(rho_r_whiff_p>.05) = NaN;

subplot(2,3,3); hold on
plot(all_history_lengths,rho_x_whiff,'k+');
plot(all_history_lengths,rho_x_gain,'r+');
set(gca,'XScale','log')
xlabel('Stimulus history length (ms)')
ylabel('\rho')

subplot(2,3,6); hold on
plot(all_history_lengths,rho_r_whiff,'k+');
plot(all_history_lengths,rho_r_gain,'r+');
set(gca,'XScale','log')
xlabel('Stimulus history length (ms)')
ylabel('\rho')


prettyFig();

if being_published
	snapnow
	delete(gcf)
end

%%
% As a validation, we repeat this analysis using synthetic data generated by a NL model. We shouldn't see anything here. 


clear p

p(1).k_D = .6578;
p(1).n = .7188;

p(2).  k_D = 0.1109;
p(2).    n = .9688;

p(3).k_D = .1187;
p(3).n = .7812;

% generate responses using this model 
warning off
for i = 1:length(data)
	for j = 1:size(data(i).X,2)
		try
			data(i).P(:,j) = NLNmodel([data(i).S(:,j) - min(data(i).S(:,j)) data(i).R(:,j)] ,p(i));
		catch
		end
	end
end
warning on

% we now attempt to estimate a gain control timescale from the data
% first collect all whiffs
[s,x,r,whiff_s,group] = binnedWhiffGainAnalysis(data(2).S,-data(2).P,data(2).R);

figure('outerposition',[0 0 1400 901],'PaperUnits','points','PaperSize',[1400 901]); hold on
subplot(2,3,1); hold on
for i = 1:max(group)
	tempx = whiff_s(group==i)/mean(whiff_s(group==i));
	tempy = x(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(whiff_s,x))],'Location','northeast')
xlabel('Whiff amplitude (norm)')
ylabel('NLN model response (norm)')

subplot(2,3,2); hold on
for i = 1:max(group)
	tempx = s(group==i);
	tempy = x(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(s,x))],'Location','northeast')
xlabel('\mu_{Stimulus} in preceding 300ms')
ylabel('NLN model response (norm)')

subplot(2,3,4); hold on
for i = 1:max(group)
	tempx = whiff_s(group==i)/mean(whiff_s(group==i));
	tempy = r(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(whiff_s,r))],'Location','northeast')
xlabel('Whiff amplitude (norm)')
ylabel('Firing response (norm)')

subplot(2,3,5); hold on
for i = 1:max(group)
	tempx = s(group==i);
	tempy = r(group==i);
	[tempx,idx] = sort(tempx);
	plot(tempx,tempy(idx),'+-');
end
l = plot(NaN,NaN,'k+');
legend(l,['\rho = ' oval(spear(s,r))],'Location','northeast')
xlabel('\mu_{Stimulus} in preceding 300ms')
ylabel('Firing response (norm)')

% now vary the stimulus history length 
all_history_lengths = unique(floor(logspace(1,4,60)));

rho_x_whiff = NaN*all_history_lengths;
rho_x_gain = NaN*all_history_lengths;
rho_r_whiff = NaN*all_history_lengths;
rho_r_gain = NaN*all_history_lengths;

rho_x_whiff_p = NaN*all_history_lengths;
rho_x_gain_p = NaN*all_history_lengths;
rho_r_whiff_p = NaN*all_history_lengths;
rho_r_gain_p = NaN*all_history_lengths;

for i = 1:length(all_history_lengths)
	[s,x,r,whiff_s,group] = binnedWhiffGainAnalysis(data(2).S,-data(2).P,data(2).R,'history_length',all_history_lengths(i));

	% compute correlations 
	[rho_x_gain(i), rho_x_gain_p(i)] = corr(s,x,'type','Spearman');
	[rho_x_whiff(i), rho_x_whiff_p(i)] = corr(whiff_s,x,'type','Spearman');
	[rho_r_gain(i), rho_r_gain_p(i)] = corr(s,r,'type','Spearman');
	[rho_r_whiff(i), rho_r_whiff_p(i)] = corr(whiff_s,r,'type','Spearman');


end

% emphasise significant points
subplot(2,3,3); hold on
plot(all_history_lengths,rho_x_whiff,'k');
plot(all_history_lengths,rho_x_gain,'r');


subplot(2,3,6); hold on
plot(all_history_lengths,rho_r_whiff,'k');
plot(all_history_lengths,rho_r_gain,'r');



rho_x_gain(rho_x_gain_p>.05) = NaN;
rho_x_whiff(rho_x_whiff_p>.05) = NaN;
rho_r_gain(rho_r_gain_p>.05) = NaN;
rho_r_whiff(rho_r_whiff_p>.05) = NaN;

subplot(2,3,3); hold on
plot(all_history_lengths,rho_x_whiff,'k+');
plot(all_history_lengths,rho_x_gain,'r+');
set(gca,'XScale','log')
xlabel('Stimulus history length (ms)')
ylabel('\rho')

subplot(2,3,6); hold on
plot(all_history_lengths,rho_r_whiff,'k+');
plot(all_history_lengths,rho_r_gain,'r+');
set(gca,'XScale','log')
xlabel('Stimulus history length (ms)')
ylabel('\rho')


prettyFig();

if being_published
	snapnow
	delete(gcf)
end

%% Version Info
%
pFooter;


